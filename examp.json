{
  "url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/issues/5",
  "repository_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe",
  "labels_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/issues/5/labels{/name}",
  "comments_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/issues/5/comments",
  "events_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/issues/5/events",
  "html_url": "https://github.com/althea-mesh/althea-site-deluxe/issues/5",
  "id": 371234089,
  "node_id": "MDU6SXNzdWUzNzEyMzQwODk=",
  "number": 5,
  "title": "Make sure new site is on https and CORS settings on form backend are correct",
  "user": {
    "login": "jtremback",
    "id": 1335122,
    "node_id": "MDQ6VXNlcjEzMzUxMjI=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/1335122?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jtremback",
    "html_url": "https://github.com/jtremback",
    "followers_url": "https://api.github.com/users/jtremback/followers",
    "following_url": "https://api.github.com/users/jtremback/following{/other_user}",
    "gists_url": "https://api.github.com/users/jtremback/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jtremback/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jtremback/subscriptions",
    "organizations_url": "https://api.github.com/users/jtremback/orgs",
    "repos_url": "https://api.github.com/users/jtremback/repos",
    "events_url": "https://api.github.com/users/jtremback/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jtremback/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [],
  "milestone": null,
  "comments": 0,
  "created_at": "2018-10-17T19:32:53Z",
  "updated_at": "2018-10-17T19:32:53Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "repository": {
    "id": 148554861,
    "node_id": "MDEwOlJlcG9zaXRvcnkxNDg1NTQ4NjE=",
    "name": "althea-site-deluxe",
    "full_name": "althea-mesh/althea-site-deluxe",
    "private": false,
    "owner": {
      "login": "althea-mesh",
      "id": 25123050,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjI1MTIzMDUw",
      "avatar_url": "https://avatars1.githubusercontent.com/u/25123050?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/althea-mesh",
      "html_url": "https://github.com/althea-mesh",
      "followers_url": "https://api.github.com/users/althea-mesh/followers",
      "following_url": "https://api.github.com/users/althea-mesh/following{/other_user}",
      "gists_url": "https://api.github.com/users/althea-mesh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/althea-mesh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/althea-mesh/subscriptions",
      "organizations_url": "https://api.github.com/users/althea-mesh/orgs",
      "repos_url": "https://api.github.com/users/althea-mesh/repos",
      "events_url": "https://api.github.com/users/althea-mesh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/althea-mesh/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "html_url": "https://github.com/althea-mesh/althea-site-deluxe",
    "description": null,
    "fork": false,
    "url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe",
    "forks_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/forks",
    "keys_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/teams",
    "hooks_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/hooks",
    "issue_events_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/issues/events{/number}",
    "events_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/events",
    "assignees_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/assignees{/user}",
    "branches_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/branches{/branch}",
    "tags_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/tags",
    "blobs_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/languages",
    "stargazers_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/stargazers",
    "contributors_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/contributors",
    "subscribers_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/subscribers",
    "subscription_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/subscription",
    "commits_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/contents/{+path}",
    "compare_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/merges",
    "archive_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/downloads",
    "issues_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/issues{/number}",
    "pulls_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/labels{/name}",
    "releases_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/releases{/id}",
    "deployments_url": "https://api.github.com/repos/althea-mesh/althea-site-deluxe/deployments",
    "created_at": "2018-09-12T23:34:53Z",
    "updated_at": "2018-10-17T22:22:27Z",
    "pushed_at": "2018-10-17T22:22:25Z",
    "git_url": "git://github.com/althea-mesh/althea-site-deluxe.git",
    "ssh_url": "git@github.com:althea-mesh/althea-site-deluxe.git",
    "clone_url": "https://github.com/althea-mesh/althea-site-deluxe.git",
    "svn_url": "https://github.com/althea-mesh/althea-site-deluxe",
    "homepage": null,
    "size": 37593,
    "stargazers_count": 0,
    "watchers_count": 0,
    "language": "HTML",
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": true,
    "forks_count": 3,
    "mirror_url": null,
    "archived": false,
    "open_issues_count": 2,
    "license": null,
    "forks": 3,
    "open_issues": 2,
    "watchers": 0,
    "default_branch": "gh-pages"
  },
  "body": ""
}[
  ({
    "url": "https://api.github.com/projects/columns/3361104",
    "project_url": "https://api.github.com/projects/1755122",
    "cards_url": "https://api.github.com/projects/columns/3361104/cards",
    "id": 3361104,
    "node_id": "MDEzOlByb2plY3RDb2x1bW4zMzYxMTA0",
    "name": "Backlog",
    "created_at": "2018-09-07T20:54:11Z",
    "updated_at": "2018-10-22T23:09:28Z",
    "cards": [
      {
        "deadline": null,
        "archived": false,
        "note": "I want some kind of way to view the radio dashboard (airos or whatever) while loading a radiolink. This might involve having the radio dashboard accessible when the radio is plugged into the router's lan port or something.",
        "id": 14058690,
        "card_created_at": "2018-10-20T17:32:12Z",
        "column": "3361104",
        "card_url": "https://api.github.com/projects/columns/cards/14058690"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 14047596,
        "card_created_at": "2018-10-19T21:41:03Z",
        "issue_created_at": "2018-10-19T21:41:32Z",
        "column": "3361104",
        "card_url": "https://api.github.com/projects/columns/cards/14047596",
        "issue_number": 7,
        "title": "Design: Router wallet",
        "issue_url": "https://github.com/althea-mesh/issue-warehouse/issues/7",
        "state": "open",
        "assignees": [],
        "body": "- Router needs to store some ether\r\n- Needs to put it in channels at the right time\r\n- Maybe this issue forks out into automated channel management as well"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 14048033,
        "card_created_at": "2018-10-19T22:01:50Z",
        "issue_created_at": "2018-10-19T22:02:25Z",
        "column": "3361104",
        "card_url": "https://api.github.com/projects/columns/cards/14048033",
        "issue_number": 9,
        "title": "Implement Centralized bandwidth payments site",
        "issue_url": "https://github.com/althea-mesh/issue-warehouse/issues/9",
        "state": "open",
        "assignees": [],
        "body": "- According to jehan's designbelow:\r\n\r\n______"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 12807122,
        "card_created_at": "2018-09-08T01:19:07Z",
        "issue_created_at": "2018-09-08T01:19:26Z",
        "column": "3361104",
        "card_url": "https://api.github.com/projects/columns/cards/12807122",
        "issue_number": 4,
        "title": "Check whether node IPs being added to subnet DAO node list are within subnet DAO's range",
        "issue_url": "https://github.com/althea-mesh/aragon-node-list/issues/4",
        "state": "open",
        "assignees": ["ttk2", "sebohe"],
        "body": ""
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 14047533,
        "card_created_at": "2018-10-19T21:38:03Z",
        "issue_created_at": "2018-10-19T21:38:14Z",
        "column": "3361104",
        "card_url": "https://api.github.com/projects/columns/cards/14047533",
        "issue_number": 25,
        "title": "Adam educates himself on payment operations",
        "issue_url": "https://github.com/althea-mesh/guac_rs/issues/25",
        "state": "open",
        "assignees": ["asoltys"],
        "body": ""
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 12807095,
        "card_created_at": "2018-09-08T01:17:01Z",
        "issue_created_at": "2018-09-08T01:18:07Z",
        "column": "3361104",
        "card_url": "https://api.github.com/projects/columns/cards/12807095",
        "issue_number": 2,
        "title": "Design subnettingscheme",
        "issue_url": "https://github.com/althea-mesh/issue-warehouse/issues/2",
        "state": "open",
        "assignees": ["ttk2"],
        "body": "- What is our global allocation going to be?\r\n- How much room can we give individual subnet DAOs?"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 13679587,
        "card_created_at": "2018-10-08T19:15:32Z",
        "issue_created_at": "2018-10-08T19:16:01Z",
        "column": "3361104",
        "card_url": "https://api.github.com/projects/columns/cards/13679587",
        "issue_number": 30,
        "title": "Implement router-dao address exchange",
        "issue_url": "https://github.com/althea-mesh/althea-dash/issues/30",
        "state": "open",
        "assignees": ["asoltys"],
        "body": "Check out this post: https://forum.altheamesh.com/t/router-to-subnet-dao-data-exchange-setup/169\r\n\r\nAnd talk to jehan before starting\r\n\r\nStill needto call endpoint that sets mesh_ip"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 14046244,
        "card_created_at": "2018-10-19T20:40:01Z",
        "issue_created_at": "2018-10-19T20:39:46Z",
        "column": "3361104",
        "card_url": "https://api.github.com/projects/columns/cards/14046244",
        "issue_number": 321,
        "title": "Obscure Babel Int Parsing error",
        "issue_url": "https://github.com/althea-mesh/althea_rs/issues/321",
        "state": "open",
        "assignees": ["asoltys"],
        "body": "Observed when first flashing 10RC4 by Josh and I, went away after reboot, can't be identified by Adam \r\n\r\nMain symptoms include the neighbours endpoint giving a 500 and generally bad behavior as babel failed to parse routes. \r\n\r\nI've assigned Adam to make a basic pull request to log route parsing in more detail with the hope of capturing it in the future. "
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 14036192,
        "card_created_at": "2018-10-19T14:49:26Z",
        "issue_created_at": "2018-10-19T14:48:57Z",
        "column": "3361104",
        "card_url": "https://api.github.com/projects/columns/cards/14036192",
        "issue_number": 24,
        "title": "Contract call wrappers",
        "issue_url": "https://github.com/althea-mesh/guac_rs/issues/24",
        "state": "open",
        "assignees": ["mpapierski"],
        "body": "Depends on #23 \r\n\r\nImplement contract call wrappers that will make it easier to use them in #20.\r\n\r\n- [ ] `open_channel(...)` -> Should return a Future with `ChannelId` which is sent to us through Event\r\n- [] `join_channel(ChannelId, ...)` -> Should return a Future once an Event from the contract is received\r\n- [ ] `update_channel(ChannelId, ...)` -> Should return a Future once a confirmation event is received\r\n- [ ] `close_channel` ->Returns a future once event is  received from the network.\r\n- [ ] `start_challenge` -> Returns a future once event is received from the network.\r\n\r\nOnce `ChannelId` is known it would be good idea to ensure that confirmation eventsare received for the `ChannelId` we were asking for."
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 13926582,
        "card_created_at": "2018-10-16T17:12:34Z",
        "issue_created_at": "2018-10-16T17:12:59Z",
        "column": "3361104",
        "card_url": "https://api.github.com/projects/columns/cards/13926582",
        "issue_number": 14,
        "title": "Getstock Aragon DAO working without Althea, or demonstrate it not working and file an issue.",
        "issue_url": "https://github.com/althea-mesh/aragon-node-list/issues/14",
        "state": "open",
        "assignees": ["sebohe"],
        "body": ""
      },
      {
        "deadline": null,
        "archived": false,
        "note": "Design add exits box",
        "id": 13673793,
        "card_created_at": "2018-10-08T15:51:31Z",
        "column": "3361104",
        "card_url": "https://api.github.com/projects/columns/cards/13673793"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 13926820,
        "card_created_at": "2018-10-16T17:18:15Z",
        "issue_created_at": "2018-10-16T17:18:42Z",
        "column": "3361104",
        "card_url": "https://api.github.com/projects/columns/cards/13926820",
        "issue_number": 15,
        "title": "Get stock Aragon DAO working with stock counter example app, or demonstrate it not working and file an issue.",
        "issue_url": "https://github.com/althea-mesh/aragon-node-list/issues/15",
        "state": "open",
        "assignees": [],
        "body": ""
      },
      {
        "deadline": null,
        "archived": false,
        "note": "Implement redesigned subnetDAO configuration",
        "id": 13673624,
        "card_created_at": "2018-10-08T15:47:14Z",
        "column": "3361104",
        "card_url": "https://api.github.com/projects/columns/cards/13673624"
      },
      {
        "deadline": null,
        "archived": false,
        "note": "Frontend for logging",
        "id": 13673398,
        "card_created_at": "2018-10-08T15:41:59Z",
        "column": "3361104",
        "card_url": "https://api.github.com/projects/columns/cards/13673398"
      },
      {
        "deadline": null,
        "archived": false,
        "note": "Designs for logging\r\n\r\nTurn logging off if they want.",
        "id": 13673391,
        "card_created_at": "2018-10-08T15:41:47Z",
        "column": "3361104",
        "card_url": "https://api.github.com/projects/columns/cards/13673391"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 13206218,
        "card_created_at": "2018-09-21T17:38:15Z",
        "issue_created_at": "2018-09-21T17:39:11Z",
        "column": "3361104",
        "card_url": "https://api.github.com/projects/columns/cards/13206218",
        "issue_number": 278,
        "title": "Research exit nodes giving static IPs to users",
        "issue_url": "https://github.com/althea-mesh/althea_rs/issues/278",
        "state": "open",
        "assignees": [],
        "body": "People want static ipv4 or ipv6 IPs for business and gaming"
      },
      {
        "deadline": "10/29/2018",
        "archived": false,
        "note": null,
        "id": 13125689,
        "card_created_at": "2018-09-19T12:20:57Z",
        "issue_created_at": "2018-08-17T23:26:53Z",
        "column": "3361104",
        "card_url": "https://api.github.com/projects/columns/cards/13125689",
        "issue_number": 218,
        "title": "Redirect to dashboard before exit tunnel is ready",
        "issue_url": "https://github.com/althea-mesh/althea_rs/issues/218",
        "state": "open",
        "assignees": ["drozdziak1"],
        "body": "insert an iptables rule to redirect users to the dashboard until the exit tunnel is open and functioning. \r\n\r\ndeadline:10/29/2018\r\n\r\npushed back in favour of more urgent issues. "
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 13103275,
        "card_created_at": "2018-09-18T19:38:47Z",
        "issue_created_at": "2018-09-18T19:38:42Z",
        "column": "3361104",
        "card_url": "https://api.github.com/projects/columns/cards/13103275",
        "issue_number": 272,
        "title": "Gateways should not enforce subnet dao rules against exits even with enforcing = true",
        "issue_url": "https://github.com/althea-mesh/althea_rs/issues/272",
        "state": "open",
        "assignees": ["drozdziak1"],
        "body": "This prevents exits from needing to get added to every dao. "
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 14102913,
        "card_created_at": "2018-10-22T21:41:41Z",
        "issue_created_at": "2018-10-22T21:41:57Z",
        "column": "3361104",
        "card_url": "https://api.github.com/projects/columns/cards/14102913",
        "issue_number": 10,
        "title": "Research and set up framework for custodial bandwidth payments site.",
        "issue_url": "https://github.com/althea-mesh/issue-warehouse/issues/10",
        "state": "open",
        "assignees": ["asoltys"],
        "body": "- Probably should be node.js?\r\n- What database?\r\n- What ORM (if any?)\r\n- etc."
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 13103262,
        "card_created_at": "2018-09-18T19:37:54Z",
        "issue_created_at": "2018-09-18T19:37:49Z",
        "column": "3361104",
        "card_url": "https://api.github.com/projects/columns/cards/13103262",
        "issue_number": 271,
        "title": "Support for Multiple addresses ",
        "issue_url": "https://github.com/althea-mesh/althea_rs/issues/271",
        "state": "open",
        "assignees": ["jkilpatr"],
        "body": "for multiple subnet dao membership, low priority"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 13009344,
        "card_created_at": "2018-09-14T19:30:06Z",
        "issue_created_at": "2018-09-14T19:31:02Z",
        "column": "3361104",
        "card_url": "https://api.github.com/projects/columns/cards/13009344",
        "issue_number": 3,
        "title": "Time to DAI",
        "issue_url": "https://github.com/althea-mesh/issue-warehouse/issues/3",
        "state": "open",
        "assignees": ["sebohe"],
        "body": "We need to make sure that DAI works in all of our stuff. Start this task out by creating individual tasks in all the repos that this will touch."
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 13927975,
        "card_created_at": "2018-10-16T17:51:40Z",
        "issue_created_at": "2018-10-16T17:53:35Z",
        "column": "3361104",
        "card_url": "https://api.github.com/projects/columns/cards/13927975",
        "issue_number": 21,
        "title": "Get contract fully tested in rust",
        "issue_url": "https://github.com/althea-mesh/guac_rs/issues/21",
        "state": "open",
        "assignees": ["mpapierski"],
        "body": "This involves going through a full happy path test, plus testing every throw condition."
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 13000222,
        "card_created_at": "2018-09-14T13:43:14Z",
        "issue_created_at": "2018-09-14T13:36:10Z",
        "column": "3361104",
        "card_url": "https://api.github.com/projects/columns/cards/13000222",
        "issue_number": 264,
        "title": "On exit failure Rita on devices freezes for up to ~150 seconds ",
        "issue_url": "https://github.com/althea-mesh/althea_rs/issues/264",
        "state": "open",
        "assignees": ["jkilpatr"],
        "body": "I think this is because of tcp timeout issues, it's a race condition do depending on when the future is issued youmay freeze or may not. This is very bad for gateways because there's a 50/50 chance they won't come back up right. \r\n\r\nI can't really tell why that is, the tunnels should be overwritten and added to the list properly, but somehow the delay can disrupt the reconvergence process. "
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 12812599,
        "card_created_at": "2018-09-08T14:51:05Z",
        "issue_created_at": "2018-09-08T14:51:05Z",
        "column": "3361104",
        "card_url": "https://api.github.com/projects/columns/cards/12812599",
        "issue_number": 255,
        "title": "OpenWRT specific features and endpoints should detect the platform and short circuit",
        "issue_url": "https://github.com/althea-mesh/althea_rs/issues/255",
        "state": "open",
        "assignees": ["asoltys", "drozdziak1"],
        "body": "Right now if you hit the wifi-settings endpoint while running Rita on lets say Ubuntu it will try and read the nonexistant uci and either die or spit out an incomprehensible error. \r\n\r\nWeshould detect if the uci command is available and gracefully return a \"not openwrt\" error if it's not. "
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 12807038,
        "card_created_at": "2018-09-08T01:13:23Z",
        "issue_created_at": "2018-09-08T01:13:40Z",
        "column": "3361104",
        "card_url": "https://api.github.com/projects/columns/cards/12807038",
        "issue_number": 1,
        "title": "TCR Research",
        "issue_url": "https://github.com/althea-mesh/issue-warehouse/issues/1",
        "state": "open",
        "assignees": ["sebohe"],
        "body": "Look into what TCRs are out there, and also what TCR UIs. Try setting some of them up. Two I know of are Mike Goldin's TCR and Aragon is working on something. There are also several UIs, and FOAM probably has a pretty good looking TCR if it is available as open source yet."
      }
    ]
  },
  {
    "url": "https://api.github.com/projects/columns/3328834",
    "project_url": "https://api.github.com/projects/1755122",
    "cards_url": "https://api.github.com/projects/columns/3328834/cards",
    "id": 3328834,
    "node_id": "MDEzOlByb2plY3RDb2x1bW4zMzI4ODM0",
    "name": "To do",
    "created_at": "2018-09-03T07:04:58Z",
    "updated_at": "2018-10-22T22:55:23Z",
    "cards": [
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 14104800,
        "card_created_at": "2018-10-22T22:55:17Z",
        "issue_created_at": "2018-10-18T14:14:12Z",
        "column": "3328834",
        "card_url": "https://api.github.com/projects/columns/cards/14104800",
        "issue_number": 31,
        "title": "Prices from the routers are in Wei/Byte",
        "issue_url": "https://github.com/althea-mesh/althea-dash/issues/31",
        "state": "open",
        "assignees": ["asoltys", "jtremback"],
        "body": "we probably want to display them in eth/gigabyterather than right now where it's Eth per byte, which is crazy inaccurate.\r\n\r\nThe conversion forumula is to multiply by (1000^3)/(1*10^18)\r\n\r\n"
      },
      {
        "deadline": "10/22/2018",
        "archived": false,
        "note": null,
        "id": 14047443,
        "card_created_at": "2018-10-19T21:33:04Z",
        "issue_created_at": "2018-10-19T21:33:55Z",
        "column": "3328834",
        "card_url": "https://api.github.com/projects/columns/cards/14047443",
        "issue_number": 6,
        "title": "Put as many more pages in as possible in new site",
        "issue_url": "https://github.com/althea-mesh/althea-site-deluxe/issues/6",
        "state": "open",
        "assignees": ["jtremback"],
        "body": "Glossary, About, Team, etc.\r\n\r\ndeadline:10/22/2018"
      },
      {
        "deadline": "10/22/2018",
        "archived": false,
        "note": null,
        "id": 13970811,
        "card_created_at": "2018-10-17T19:31:45Z",
        "issue_created_at": "2018-10-17T19:32:09Z",
        "column": "3328834",
        "card_url": "https://api.github.com/projects/columns/cards/13970811",
        "issue_number": 4,
        "title": "Audit new site",
        "issue_url": "https://github.com/althea-mesh/althea-site-deluxe/issues/4",
        "state": "open",
        "assignees": ["asoltys"],
        "body": "- Broken links\r\n- Other broken stuff\r\n- Chrome audits on site loading etc\r\n- Images are a bit over optimized\r\n\r\ndeadline:10/22/2018"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 14047931,
        "card_created_at": "2018-10-19T21:57:36Z",
        "issue_created_at": "2018-10-19T21:57:48Z",
        "column": "3328834",
        "card_url": "https://api.github.com/projects/columns/cards/14047931",
        "issue_number": 8,
        "title": "Design: Routing vs price metric",
        "issue_url": "https://github.com/althea-mesh/issue-warehouse/issues/8",
        "state": "open",
        "assignees": ["jkilpatr"],
        "body": "- Normalize prices vs route metric\r\n- Figure out how to make sure they both play a part and the proportionality can be adjusted by the slider instead of happening by chance based on local prices.\r\n- Check out whatever Ben's log thing was"
      },
      {
        "deadline": "10/24/2018",
        "archived": false,
        "note": null,
        "id": 14000093,
        "card_created_at": "2018-10-18T14:34:16Z",
        "issue_created_at": "2018-09-05T16:03:30Z",
        "column": "3328834",
        "card_url": "https://api.github.com/projects/columns/cards/14000093",
        "issue_number": 15,
        "title": "No mechanism to set local fee at runtime",
        "issue_url": "https://github.com/althea-mesh/babeld/issues/15",
        "state": "open",
        "assignees": ["asoltys"],
        "body": "We'd like to be able to issue a command to babeld to change the local fee value at runtime and have it propagated to all of our routes. Right now it seems the only way to change the fee is through the config option or as a command line argument when babeld is started.\r\n\r\nThis is blocking further progress on creating a rita endpoint and frontend UI described here: https://forum.altheamesh.com/t/users-should-be-able-to-set-their-own-price/143\r\n\r\ndeadline:10/24/2018"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 14000071,
        "card_created_at": "2018-10-18T14:33:52Z",
        "issue_created_at": "2018-10-18T14:32:12Z",
        "column": "3328834",
        "card_url": "https://api.github.com/projects/columns/cards/14000071",
        "issue_number": 317,
        "title": "Rita should have a settings value for Price and set it on startup. ",
        "issue_url": "https://github.com/althea-mesh/althea_rs/issues/317",
        "state": "open",
        "assignees": ["drozdziak1"],
        "body": "The conversion forumula is to multiply by (1000^3)/(1*10^18)the reverse is the inverse, we should be setting the default price in wei/byteas 250k wei, this translates to 5c /gb \r\n\r\ndeadline:10/27/18\r\n\r\n"
      },
      {
        "deadline": "10/22/2018",
        "archived": false,
        "note": null,
        "id": 14009184,
        "card_created_at": "2018-10-18T19:18:46Z",
        "issue_created_at": "2018-09-27T00:02:19Z",
        "column": "3328834",
        "card_url": "https://api.github.com/projects/columns/cards/14009184",
        "issue_number": 288,
        "title": "Exit Traffic Watcher is broken and missing traffic freqently ",
        "issue_url": "https://github.com/althea-mesh/althea_rs/issues/288",
        "state": "open",
        "assignees": ["ttk2", "drozdziak1"],
        "body": "`Sep 26 19:54:50 localhost rita_exit: WARN 2018-09-26T23:54:50Z: rita_exit::rita_common::traffic_watcher: We have an id Identity { mesh_ip: V6(fd86:a371:8952:227f:8062:131b:a844:30ed), eth_address: 0x0101010101010101010101010101010101010101, wg_public_key: \"QgZhZhfe6vK+zwIqya+LC1u9fqlYfIFcK/w7p1EWMHo=\" } but not destination`\r\n\r\n`Sep 27 01:54:49 vps184553 rita_exit: WARN 2018-09-26T23:54:49Z: rita_exit::rita_exit::traffic_watcher: We have a destination Int256(0) but no id`\r\n\r\ndeadline:10/22/2018"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 14047846,
        "card_created_at": "2018-10-19T21:54:07Z",
        "issue_created_at": "2018-10-18T16:38:15Z",
        "column": "3328834",
        "card_url": "https://api.github.com/projects/columns/cards/14047846",
        "issue_number": 17,
        "title": "Ensure that price-aware routing is normalized based on the adjustment factor",
        "issue_url": "https://github.com/althea-mesh/babeld/issues/17",
        "state": "open",
        "assignees": ["jkilpatr"],
        "body": "Routing decisions for price aware routing should be normalized based on the adjustment factor. \r\n\r\nThe algorithm I'm thinking of is that we have the normalized value being some value between zero and u16max / 2. Then based on the adjustment factor that value is determined (percents maybe?) then finally we normalize all prices within that by dividing by the highest known price and converting that into a percentage to apply to the range. \r\n\r\nI think this may have secondary effects I haven't considered, right now we can in theory apply the 500k wei/byte number by fudging the adjustment factor so that it doesn't dominate routing decisions, but we need something more consistent. \r\n"
      }
    ]
  },
  {
    "url": "https://api.github.com/projects/columns/3328835",
    "project_url": "https://api.github.com/projects/1755122",
    "cards_url": "https://api.github.com/projects/columns/3328835/cards",
    "id": 3328835,
    "node_id": "MDEzOlByb2plY3RDb2x1bW4zMzI4ODM1",
    "name": "In progress",
    "created_at": "2018-09-03T07:04:58Z",
    "updated_at": "2018-10-22T23:09:28Z",
    "cards": [
      {
        "deadline": "10/22/2018",
        "archived": false,
        "note": null,
        "id": 14046200,
        "card_created_at": "2018-10-19T20:38:23Z",
        "issue_created_at": "2018-10-19T20:38:47Z",
        "column": "3328835",
        "card_url": "https://api.github.com/projects/columns/cards/14046200",
        "issue_number": 8,
        "title": "Get channel tests working in Truffle",
        "issue_url": "https://github.com/althea-mesh/simple-bidirectional-erc20-channel/issues/8",
        "state": "open",
        "assignees": ["sebohe"],
        "body": "If you can't get this working by the deadline, we should switch it to rust. When you do have it working, ping jehan totalk about what new tests to write.\r\n\r\ndeadline:10/22/2018"
      },
      {
        "deadline": "10/22/2018",
        "archived": false,
        "note": null,
        "id": 13969412,
        "card_created_at": "2018-10-17T18:43:29Z",
        "issue_created_at": "2018-10-17T18:45:15Z",
        "column": "3328835",
        "card_url": "https://api.github.com/projects/columns/cards/13969412",
        "issue_number": 315,
        "title": "Get Rita serving on HTTPS",
        "issue_url": "https://github.com/althea-mesh/althea_rs/issues/315",
        "state": "open",
        "assignees": ["drozdziak1"],
        "body": "- Using https on the frontend over https\r\n- In order for the browser to be allowed to make api calls, Rita needs to be using the same cert\r\n- Or maybe proxy everything thru nginx\r\n\r\ndeadline:10/22/2018"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 13206383,
        "card_created_at": "2018-09-21T17:45:54Z",
        "issue_created_at": "2018-10-19T20:44:26Z",
        "column": "3328835",
        "card_url": "https://api.github.com/projects/columns/cards/13206383",
        "issue_number": 5,
        "title": "Beg ARIN for a /32",
        "issue_url": "https://github.com/althea-mesh/issue-warehouse/issues/5",
        "state": "open",
        "assignees": ["jkilpatr"],
        "body": ""
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 14035183,
        "card_created_at": "2018-10-19T14:23:22Z",
        "issue_created_at": "2018-10-19T14:23:22Z",
        "column": "3328835",
        "card_url": "https://api.github.com/projects/columns/cards/14035183",
        "issue_number": 23,
        "title": "Integrate web3 connection",
        "issue_url": "https://github.com/althea-mesh/guac_rs/issues/23",
        "state": "open",
        "assignees": ["mpapierski"],
        "body": "Guac needs an ability to query the network. To do that we can use web3. This is separate issue from#20 where actual transactions will be broadcasted through function calls. Thisissue is more like an API to make #20 to implement.\r\n\r\n# Integrating web3\r\n\r\nThe proper way to do this is to probably integrate it into CryptoService.\r\n\r\nExample:\r\n\r\n```rust\r\nCRYPTO.web3().foo().bar()\r\n```\r\n\r\nInitially, web3 could be initialized with `$NETWORK_HOST` env var, that could default to `localhost:8545`. \r\n\r\n- [x] Web3 instance in `CRYPTO` global variable\r\n\r\nAdditional features:\r\n\r\n- [ ] A generic function to poll for events by name. For now its fine to wait for event by name, and there is no immediate need to filter out events by arguments.\r\n\r\n# Network properties\r\n\r\n`CryptoService` should be aware of important network properties such as:\r\n\r\n-[x] Getting network ID\r\n- [ ] Getting nonce for a given key\r\n- [ ] Gettingcurrent gas price\r\n- [ ] Optionally, getting gas limit which could be hardcoded, or made configurable.\r\n- [ ] Getting current balance\r\n\r\n# Config\r\n\r\nAs a last step some sort of way to configure global `CRYPTO` object should be introduced that would be mandatory to call before doing anything. Rita should call it when its starting up and reading config file.\r\n\r\n```rust\r\nCRYPTO.init(&config)\r\n```\r\n\r\nDoing it as a single step might make it easier toinitialize, and improve error handling.\r\n\r\n## Properties of the Config struct\r\n\r\n- [x] ChannelManager contract address\r\n- [x] ETH network host\r\n"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 14105147,
        "card_created_at": "2018-10-22T23:09:03Z",
        "issue_created_at": "2018-10-22T23:06:16Z",
        "column": "3328835",
        "card_url": "https://api.github.com/projects/columns/cards/14105147",
        "issue_number": 32,
        "title": "Display countdown during rita restart",
        "issue_url": "https://github.com/althea-mesh/althea-dash/issues/32",
        "state": "open",
        "assignees": ["asoltys"],
        "body": "Actions that cause rita to get restarted like port toggling and setting the mesh IP should trigger a dialog to come up that re-assures the user that something is happening and is going to take some time before anything else can be done through the dashboard.\r\n\r\nWe're already polling the /version endpoint to see if rita is reachable so it's just a matter of displaying a countdown while that happens. I think Justin suggested waiting 2 minutes by default and then if rita is still not back online by that point we can display some sort of an error message."
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 13969881,
        "card_created_at": "2018-10-17T18:59:34Z",
        "issue_created_at": "2018-09-22T22:26:07Z",
        "column": "3328835",
        "card_url": "https://api.github.com/projects/columns/cards/13969881",
        "issue_number": 279,
        "title": "Exits should indicate if an email is or is not mandatory",
        "issue_url": "https://github.com/althea-mesh/althea_rs/issues/279",
        "state": "open",
        "assignees": ["asoltys", "drozdziak1"],
        "body": "Justneed to fix tests for this one.\r\n\r\nRight now it's possible to have exits that don't need emails, but the UI will always assume that one is needed becauseit can't be sure without trying. \r\nThe exit should include in it's exit details struct if an email is or is not required. This will then be exposed from the exits endpoint to the UI which can take advantage of it. \r\n\r\nthis is pretty low priority. Might be a good task for @asoltys rust wise if he has free time. "
      }
    ]
  },
  {
    "url": "https://api.github.com/projects/columns/3328836",
    "project_url": "https://api.github.com/projects/1755122",
    "cards_url": "https://api.github.com/projects/columns/3328836/cards",
    "id": 3328836,
    "node_id": "MDEzOlByb2plY3RDb2x1bW4zMzI4ODM2",
    "name": "Needs review",
    "created_at": "2018-09-03T07:04:58Z",
    "updated_at": "2018-10-22T22:46:46Z",
    "cards": []
  },
  {
    "url": "https://api.github.com/projects/columns/3328838",
    "project_url": "https://api.github.com/projects/1755122",
    "cards_url": "https://api.github.com/projects/columns/3328838/cards",
    "id": 3328838,
    "node_id": "MDEzOlByb2plY3RDb2x1bW4zMzI4ODM4",
    "name": "Done",
    "created_at": "2018-09-03T07:04:58Z",
    "updated_at": "2018-10-22T22:48:06Z",
    "cards": [
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 13205908,
        "card_created_at": "2018-09-21T17:25:50Z",
        "issue_created_at": "2018-09-21T17:26:00Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/13205908",
        "issue_number": 27,
        "title": "Porttoggling frontend implementation",
        "issue_url": "https://github.com/althea-mesh/althea-dash/issues/27",
        "state": "open",
        "assignees": ["asoltys"],
        "body": "- Check the router model from the info endpoint\r\n- Depending on this, map iface names like eth1 eth0.2 etc to ports in the UI.\r\n\r\n\r\nHere is what it should looklike, put this on the Router Settings screen:\r\n\r\n<img width=\"632\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1335122/46112213-b9bd8900-c19e-11e8-8de0-030bb34725ef.png\">\r\n"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 12723818,
        "card_created_at": "2018-09-05T14:42:01Z",
        "issue_created_at": "2018-08-30T10:27:32Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/12723818",
        "issue_number": 242,
        "title": "Guac integration",
        "issue_url": "https://github.com/althea-mesh/althea_rs/pull/242",
        "state": "open",
        "assignees": [],
        "body": "Rebased, and finally managed to get dependencies right.\r\n\r\nIts not meant to be merged as it would break MIPS (see #236), but might be valuable to get another round of reviews that were present in old integration attempt in #151."
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 13924989,
        "card_created_at": "2018-10-16T16:23:44Z",
        "issue_created_at": "2018-10-16T16:23:57Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/13924989",
        "issue_number": 19,
        "title": "Fix the number situation",
        "issue_url": "https://github.com/althea-mesh/guac_rs/issues/19",
        "state": "closed",
        "assignees": ["mpapierski"],
        "body": "- Switch to num256 everywhere\r\n- Consult with Justin on repo dependency issues"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 14030607,
        "card_created_at": "2018-10-19T12:04:55Z",
        "issue_created_at": "2018-10-19T11:22:07Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/14030607",
        "issue_number": 319,
        "title": "Pin num256 to crates.io version.",
        "issue_url": "https://github.com/althea-mesh/althea_rs/pull/319",
        "state": "closed",
        "assignees": [],
        "body": ""
      },
      {
        "deadline": "10/22/2018",
        "archived": false,
        "note": null,
        "id": 14047580,
        "card_created_at": "2018-10-19T21:40:19Z",
        "issue_created_at": "2018-10-19T21:41:15Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/14047580",
        "issue_number": 6,
        "title": "Design: Centralized bandwidth payments website.",
        "issue_url": "https://github.com/althea-mesh/issue-warehouse/issues/6",
        "state": "open",
        "assignees": ["jtremback"],
        "body": "- People can put money in their accounts\r\n- People can check their balance\r\n- Balances are credited and debited based on bandwidth logs\r\n\r\ndeadline:10/22/2018"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 13679647,
        "card_created_at": "2018-10-08T19:16:42Z",
        "issue_created_at": "2018-10-08T19:17:08Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/13679647",
        "issue_number": 13,
        "title": "Implement router-dao address exchange",
        "issue_url": "https://github.com/althea-mesh/aragon-node-list/issues/13",
        "state": "open",
        "assignees": ["asoltys"],
        "body": "Check out this post: https://forum.altheamesh.com/t/router-to-subnet-dao-data-exchange-setup/169\r\n\r\nAnd talk to jehan before starting"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 12804327,
        "card_created_at": "2018-09-07T21:20:46Z",
        "issue_created_at": "2018-09-08T00:23:26Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/12804327",
        "issue_number": 3,
        "title": "Implement designs for subnet DAO",
        "issue_url": "https://github.com/althea-mesh/aragon-node-list/issues/3",
        "state": "open",
        "assignees": ["asoltys", "sebohe"],
        "body": "https://forum.altheamesh.com/t/althea-aragon-app-frontend/151"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 12944695,
        "card_created_at": "2018-09-12T23:50:19Z",
        "issue_created_at": "2018-09-12T23:50:44Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/12944695",
        "issue_number": 1,
        "title": "Althea website temporary front page implementation",
        "issue_url": "https://github.com/althea-mesh/althea-site-deluxe/issues/1",
        "state": "open",
        "assignees": ["jtremback"],
        "body": "Set up this repo as a simple Jekyll site. This will allow GitHub pages to automatically generate pages from markdown etc. Also set up a fork of this repo as a staging site also served withgh-pages.\r\n\r\nThen take the invision mockups here: https://projects.invisionapp.com/d/main#/console/15367818/319429512/preview\r\n\r\n(give yourself some time to familiarize yourself with invision's interface and the \"inspect\" mode)\r\n\r\nAnd the copy for hidden elements here: https://docs.google.com/document/d/1xes61vmdbHhlY1-xHZ1_LUsUgTSvZONtcuh1Wi4bY0A/edit\r\n\r\nAnd start on the website.\r\n\r\nYou should be able to build this using very minor modifications to Bootstrap. Make full use of variables as described here: https://getbootstrap.com/docs/4.1/getting-started/theming/\r\n\r\nI have started on this here: \r\n\r\nOne challenging aspect of this is that it needs to be very close to the designs that were given us."
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 14008963,
        "card_created_at": "2018-10-18T19:08:42Z",
        "issue_created_at": "2018-10-11T15:57:51Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/14008963",
        "issue_number": 310,
        "title": "TustDNS needs update ",
        "issue_url": "https://github.com/althea-mesh/althea_rs/issues/310",
        "state": "closed",
        "assignees": ["drozdziak1"],
        "body": "https://users.rust-lang.org/t/rustsec-advisory-for-trust-dns-proto-affecting-server-resolver-and-client/21179\r\n\r\ndeadline:10/22/18"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 13673859,
        "card_created_at": "2018-10-08T15:52:31Z",
        "issue_created_at": "2018-10-08T15:52:49Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/13673859",
        "issue_number": 308,
        "title": "Add exits over the air",
        "issue_url": "https://github.com/althea-mesh/althea_rs/issues/308",
        "state": "closed",
        "assignees": ["drozdziak1", "jkilpatr"],
        "body": "Use the list merging with serde"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 13700271,
        "card_created_at": "2018-10-09T10:40:33Z",
        "issue_created_at": "2018-10-09T10:40:33Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/13700271",
        "issue_number": 34,
        "title": "Added basic LowerHex/UpperHex traits.",
        "issue_url": "https://github.com/althea-mesh/clarity/pull/34",
        "state": "closed",
        "assignees": [],
        "body": "This will make it easier to just print hex representation of BigEndianInts with `format!(\"{:#x}\", val)`"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 13708716,
        "card_created_at": "2018-10-09T14:42:16Z",
        "issue_created_at": "2018-10-09T14:42:16Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/13708716",
        "issue_number": 35,
        "title": "Add a helper to derive generic signatures.",
        "issue_url": "https://github.com/althea-mesh/clarity/pull/35",
        "state": "closed",
        "assignees": [],
        "body": "This is used primarily when filtering out events in a contract. This\r\nhelper also saves callers from depending on \"sha3\" crate."
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 12673921,
        "card_created_at": "2018-09-04T07:38:36Z",
        "issue_created_at": "2018-08-24T18:28:06Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/12673921",
        "issue_number": 232,
        "title": "Create library to sign our own Eth transactions",
        "issue_url": "https://github.com/althea-mesh/althea_rs/issues/232",
        "state": "closed",
        "assignees": ["mpapierski", "drozdziak1"],
        "body": "For now we just want to make a payment tx to another normal eth address. Don't overgeneralize yet.\r\n\r\nSuggested steps:\r\n\r\n1. Find documentation on the exact steps to formulate and sign a TX.Please post it in this issue because I am interested.\r\n2. Verify that we have the right crypto libs available (I think we should)\r\n3. Write the code to create and sign txs.\r\n\r\n\"Clarity\" is what the library should be called. Keep it in this repo for now.\r\n\r\n"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 13103233,
        "card_created_at": "2018-09-18T19:37:04Z",
        "issue_created_at": "2018-09-18T19:36:58Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/13103233",
        "issue_number": 26,
        "title": "Redesign subnetDAO configuration",
        "issue_url": "https://github.com/althea-mesh/althea-dash/issues/26",
        "state": "open",
        "assignees": ["jtremback"],
        "body": "redesign the information exchange between a new router and a subnet DAO to be able to get the DAO's address to the router"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 13936079,
        "card_created_at": "2018-10-16T22:25:16Z",
        "issue_created_at": "2018-10-16T22:25:39Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/13936079",
        "issue_number": 4,
        "title": "Investigate DAOStack",
        "issue_url": "https://github.com/althea-mesh/issue-warehouse/issues/4",
        "state": "open",
        "assignees": ["sebohe"],
        "body": "DAOStack or others\r\n\r\nLook at their code and see if seems stable and well-maintained, and whether it provides the features we would need toport Subnet DAOs\r\n\r\nThis ended up revealing that we don't want to use themyet"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 12804245,
        "card_created_at": "2018-09-07T21:16:51Z",
        "issue_created_at": "2018-09-08T00:20:33Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/12804245",
        "issue_number": 23,
        "title": "Frontend internationalization",
        "issue_url": "https://github.com/althea-mesh/althea-dash/issues/23",
        "state": "closed",
        "assignees": ["asoltys"],
        "body": "This will involve replacing all hardcoded interface copy that is visible to the user with references to a json file. This will allow us to easily drop in new files to create internationalized version of the frontend."
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 13103574,
        "card_created_at": "2018-09-18T19:52:27Z",
        "issue_created_at": "2018-09-18T19:52:12Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/13103574",
        "issue_number": 273,
        "title": "Endpoints and testing for changing our_ip ",
        "issue_url": "https://github.com/althea-mesh/althea_rs/issues/273",
        "state": "closed",
        "assignees": ["drozdziak1"],
        "body": "This is essential if we want to set a proper dao ip. "
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 13496438,
        "card_created_at": "2018-10-02T12:37:25Z",
        "issue_created_at": "2018-10-02T12:37:25Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/13496438",
        "issue_number": 27,
        "title": "Simplified ABI encoder",
        "issue_url": "https://github.com/althea-mesh/clarity/pull/27",
        "state": "closed",
        "assignees": [],
        "body": "This one assumes that the ABI is known in advance, and is not obtained by decoding JSON file.\r\n\r\nThis does very simplified encoding of basic types, and saves the hussle of encoding offsets of dynamic variables (which we are using) i.e. strings, bytes.\r\n\r\nThere are bunch of tests that correctly verifies the simplified encoder based on the examples https://solidity.readthedocs.io/en/develop/abi-spec.html#abi-json\r\n\r\nPartly related to #21 "
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 13341464,
        "card_created_at": "2018-09-26T21:23:30Z",
        "issue_created_at": "2018-09-26T21:24:31Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/13341464",
        "issue_number": 11,
        "title": "Implement designs for changing the subnet DAO menu to hide organizer features",
        "issue_url": "https://github.com/althea-mesh/aragon-node-list/issues/11",
        "state": "closed",
        "assignees": ["asoltys"],
        "body": "<img width=\"723\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1335122/46112956-5f71f780-c1a1-11e8-94a2-c2d1f6435326.png\">\r\n\r\n<img width=\"720\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1335122/46112971-6862c900-c1a1-11e8-9d78-968097346b56.png\">\r\n\r\n<img width=\"678\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1335122/46113195-3a31b900-c1a2-11e8-807d-ebbceb9ef666.png\">\r\n"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 12804313,
        "card_created_at": "2018-09-07T21:19:43Z",
        "issue_created_at": "2018-09-08T00:24:04Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/12804313",
        "issue_number": 24,
        "title": "Designs for port toggling",
        "issue_url": "https://github.com/althea-mesh/althea-dash/issues/24",
        "state": "open",
        "assignees": ["jtremback"],
        "body": "This is a page on the router where you can set which ports are mesh or lan or wan"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 13228640,
        "card_created_at": "2018-09-23T10:17:10Z",
        "issue_created_at": "2018-09-23T10:17:05Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/13228640",
        "issue_number": 26,
        "title": "[WIP] ABI",
        "issue_url": "https://github.com/althea-mesh/clarity/pull/26",
        "state": "closed",
        "assignees": [],
        "body": "This is a WIP PR for adding ABI support in Clarity.\r\n\r\nReference: https://solidity.readthedocs.io/en/develop/abi-spec.html#abi-json\r\n\r\n- [x] Parsing a Contract with\"JSON ABI\" (with custom validation of types)\r\n- [ ] Encoding function parameters\r\n- [ ] Constructors\r\n- [ ] Events\r\n\r\nThis introduces a separate \"abi\" module which will make it easier to structure the code, as ABI certainly needs a lot of different types.\r\n"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 12851323,
        "card_created_at": "2018-09-10T12:14:16Z",
        "issue_created_at": "2018-09-10T12:13:56Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/12851323",
        "issue_number": 258,
        "title": "Add /interface/change/{ifname}/{type} endpoint",
        "issue_url": "https://github.com/althea-mesh/althea_rs/issues/258",
        "state": "closed",
        "assignees": ["drozdziak1", "jkilpatr"],
        "body": "This endpoint is responsible for converting the given interface from whatever type it is currently assigned to whatever type is requested via UCI.\r\n\r\n- [x] Detect and avoid changes from TYPE -> TYPE\r\n\r\n- [x] handle wan input\r\n\r\n- [x] handle lan input\r\n\r\n- [x]  handle mesh input \r\n\r\n- [x] handlewan output\r\n\r\n- [x] handle lan output\r\n\r\n- [x]  handle mesh output\r\n\r\n- [x]  handle wifi lan input\r\n\r\n- [x]  handle wifi wan input\r\n\r\n- [x]  handle wifi lan out \r\n\r\n- [x]  handle wifi wan out\r\n\r\n- [x]  Gracefully clear changes and return error if uci commit fails "
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 12812631,
        "card_created_at": "2018-09-08T14:54:46Z",
        "issue_created_at": "2018-09-08T14:54:46Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/12812631",
        "issue_number": 256,
        "title": "Functionality to allow port toggling on Openwrt",
        "issue_url": "https://github.com/althea-mesh/althea_rs/issues/256",
        "state": "closed",
        "assignees": ["jkilpatr"],
        "body": "Depends on https://github.com/althea-mesh/althea_rs/issues/255\r\n\r\nFor devices like the GL-B1300 we're in a sort of odd spot, it only has three ports. So while you can resell bandwidth to up to two other mesh devices in theorythere's no real way to do that with our static port allocation during firmwarebuilding. \r\n\r\nWe build the firmware with one mesh port, one wan port, and one lan port, while this is the most flexible configuration it's actually not possible to resell this way. We have an alternate intermediary firmware that dedicates the wan port to meshing but it's difficult to expect people to flash thedevice on the fly based on the intended use. \r\n\r\nThe task for this issue is to \r\n\r\n* read the openwrt uci and parse out what ports are available and how they are assigned. \r\n* then we need to be able to re-purpose any of thoseports into any other task in a safe manner\r\n* endpoints need to be availableon the dashboard to allow users to see and modify each port\r\n\r\nThis is really a generalization of what we already do with the mesh toggle on the wifi devices to include all network devices. "
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 13194434,
        "card_created_at": "2018-09-21T11:00:53Z",
        "issue_created_at": "2018-09-21T11:00:53Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/13194434",
        "issue_number": 10,
        "title": "Update formatting after rust stable update.",
        "issue_url": "https://github.com/althea-mesh/guac_rs/pull/10",
        "state": "closed",
        "assignees": [],
        "body": "Small change. "
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 12896767,
        "card_created_at": "2018-09-11T16:21:33Z",
        "issue_created_at": "2018-09-11T15:34:12Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/12896767",
        "issue_number": 14,
        "title": "Integration tests of transactions",
        "issue_url": "https://github.com/althea-mesh/clarity/issues/14",
        "state": "closed",
        "assignees": ["mpapierski"],
        "body": "Use https://github.com/ethereum/tests/ `TransactionTests` to automatically verifyour implementation of transaction signing.\r\n\r\nDescription of the tests: https://ethereum-tests.readthedocs.io/en/latest/test_types/transaction_tests.html#sections\r\n\r\nThe suite is rather simple, and it doesn't contain actual 'signing' verification, only the sender key is derived from \"vrs\".Seems like https://github.com/althea-mesh/serde-rlp/issues/1 is required to move forward with this as test cases contains only the \"rlp\" of the transaction.\r\n\r\nTo generate test cases at runtime based on JSON it could be done in a similiar way as servo does. They use forked \"rustc_test\" (not sure if it still needs to be a fork?), that generates test functions manually based on input at runtime. Example: https://github.com/servo/html5ever/blob/master/html5ever/tests/tokenizer.rs. \r\n\r\n# Todo\r\n\r\n- [x] Sanitize addresses in similiar way as explained in pyethereum\r\n- [x] Compute \"sender\" of transaction (call recover EC etc.)\r\n\r\n# Failed tests\r\n\r\nThose tests are failing, and it is unclear why. Only clue I have is that there is some special hardfork verification required.\r\n\r\n- [x] TransactionTests/ttGasLimit/TransactionWithHighGas.json@Homestead,EIP150,EIP158,Byzantium,Constantinople@invalid\r\n- [x] TransactionTests/ttRSValue/RightVRSTestF0000000a.json@ALL@invalid\r\n- [x] TransactionTests/ttRSValue/RightVRSTestF0000000b.json@ALL@invalid\r\n- [x] TransactionTests/ttRSValue/RightVRSTestF0000000c.json@ALL@invalid\r\n- [x] ./TransactionTests/ttRSValue/RightVRSTestF0000000d.json\r\n- [x] ./TransactionTests/ttRSValue/RightVRSTestF0000000e.json\r\n- [x] ./TransactionTests/ttRSValue/RightVRSTestF0000000f.json\r\n- [x] TransactionTests/ttRSValue/RightVRSTestVPrefixedBy0.json@ALL@invalid\r\n- [x] TransactionTests/ttRSValue/RightVRSTestVPrefixedBy0_2.json@ALL@invalid\r\n- [x] TransactionTests/ttRSValue/RightVRSTestVPrefixedBy0_3.json@ALL@invalid\r\n- [x]TransactionTests/ttRSValue/TransactionWithSvalueHigh.json@Homestead,EIP150,EIP158,Byzantium,Constantinople@invalid\r\n- [x] TransactionTests/ttRSValue/TransactionWithSvalueLargerThan_c_secp256k1n_x05.json@Homestead,EIP150,EIP158,Byzantium,Constantinople@invalid\r\n- [x] TransactionTests/ttSignature/WrongVRSTestVOverflow.json@ALL@invalid\r\n- [x] TransactionTests/ttVValue/V_overflow64bitSigned.json@Homestead,EIP150,EIP158,Byzantium,Constantinople@invalid\r\n- [x] ./TransactionTests/ttVValue/V_overflow64bitPlus27.json\r\n- [x] ./TransactionTests/ttVValue/V_overflow64bitPlus28.json\r\n- [x] ./TransactionTests/ttVValue/WrongVRSTestVEqual26.json\r\n- [x] ./TransactionTests/ttVValue/WrongVRSTestVEqual29.json\r\n- [x] ./TransactionTests/ttVValue/WrongVRSTestVEqual31.json\r\n- [x] ./TransactionTests/ttVValue/WrongVRSTestVEqual36.json\r\n- [x] TransactionTests/ttVValue/WrongVRSTestVEqual39.json@ALL@invalid\r\n- [x] TransactionTests/ttVValue/WrongVRSTestVEqual41.json@ALL@invalid\r\n\r\n\r\n*TBD*\r\n\r\nTracking issue #4 "
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 12851035,
        "card_created_at": "2018-09-10T12:02:58Z",
        "issue_created_at": "2018-09-10T12:01:52Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/12851035",
        "issue_number": 257,
        "title": "Add /interfaces endpoint ",
        "issue_url": "https://github.com/althea-mesh/althea_rs/issues/257",
        "state": "closed",
        "assignees": ["drozdziak1"],
        "body": "This endpoint retrieves the available network devices from the UCI config. \r\n\r\n- [x] read out devices assigned to lan \r\n\r\n- [ ]  read out devices assigned to wan\r\n\r\n- [ ] read out devices assigned to mesh\r\n\r\n- [ ]  read out wireless devices assigned to lan\r\n\r\n- [ ]  read out wireless devices assigned to mesh"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 13000218,
        "card_created_at": "2018-09-14T13:43:01Z",
        "issue_created_at": "2018-09-14T13:40:39Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/13000218",
        "issue_number": 265,
        "title": "Identify which exit tunnels have peers",
        "issue_url": "https://github.com/althea-mesh/althea_rs/issues/265",
        "state": "closed",
        "assignees": ["jkilpatr"],
        "body": "Right now we setup exit tunnels for all signed up users, this is a good move since it reduces convergence time for a user coming online. But we have no good way to tell if a user is actually alive or if the tunnel is just waiting. \r\n\r\nThis means that sometimes I canfail to notice when a restart kicks off half of our active users as described in https://github.com/althea-mesh/althea_rs/issues/264\r\n\r\nThis isn't good, so I'm going to write a  little routine that checks who has a recent timestamp.\r\n\r\n"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 12659329,
        "card_created_at": "2018-09-03T15:14:40Z",
        "issue_created_at": "2018-09-03T15:14:33Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/12659329",
        "issue_number": 4,
        "title": "Reuse official test suite",
        "issue_url": "https://github.com/althea-mesh/serde-rlp/issues/4",
        "state": "closed",
        "assignees": [],
        "body": "We should be able to reuse this: https://raw.githubusercontent.com/ethereum/tests/develop/RLPTests/rlptest.json\r\n"
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 13003664,
        "card_created_at": "2018-09-14T15:36:44Z",
        "issue_created_at": "2018-09-14T15:36:32Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/13003664",
        "issue_number": 15,
        "title": "Use Upstream rust-secp256k1",
        "issue_url": "https://github.com/althea-mesh/clarity/issues/15",
        "state": "closed",
        "assignees": [],
        "body": "Now https://github.com/rust-bitcoin/rust-secp256k1/pull/64 is merged, so its safe to just use \"0.11\"."
      },
      {
        "deadline": null,
        "archived": false,
        "note": null,
        "id": 12850090,
        "card_created_at": "2018-09-10T11:27:11Z",
        "issue_created_at": "2018-09-06T15:35:04Z",
        "column": "3328838",
        "card_url": "https://api.github.com/projects/columns/cards/12850090",
        "issue_number": 12,
        "title": "Validate parameters against constants",
        "issue_url": "https://github.com/althea-mesh/clarity/issues/12",
        "state": "closed",
        "assignees": [],
        "body": "This shouldbe used to verify parameters of the transaction, and keys against known constants implemented in #11"
      }
    ]
  })
]
